// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechInvent.DAL.Data;

#nullable disable

namespace TechInvent.DAL.Migrations
{
    [DbContext(typeof(TechInventContext))]
    [Migration("20250517194659_cabinet-equipment-workplace")]
    partial class cabinetequipmentworkplace
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TechInvent.DM.Models.AdapterType", b =>
                {
                    b.Property<int>("IdAdapterType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_adapter_type");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("IdAdapterType")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Name" }, "name_UNIQUE")
                        .IsUnique();

                    b.ToTable("adapter_type", (string)null);
                });

            modelBuilder.Entity("TechInvent.DM.Models.Cabinet", b =>
                {
                    b.Property<int>("IdCabinet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cabinet");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("IdCabinet")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Name" }, "name_cabinet_UNIQUE")
                        .IsUnique();

                    b.ToTable("cabinet", (string)null);
                });

            modelBuilder.Entity("TechInvent.DM.Models.CabinetEquipmentType", b =>
                {
                    b.Property<int>("IdCabinetEquipmentType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cabinet_equipment_type");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("IdCabinetEquipmentType")
                        .HasName("PRIMARY");

                    b.ToTable("cabinet_equipment_type", (string)null);
                });

            modelBuilder.Entity("TechInvent.DM.Models.Component", b =>
                {
                    b.Property<int>("IdComponent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_component");

                    b.Property<int>("IdWorkplace")
                        .HasColumnType("int")
                        .HasColumnName("id_workplace");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("IdComponent")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdWorkplace" }, "fk_hardware_component_workplace1_idx");

                    b.ToTable("component", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("TechInvent.DM.Models.InstalledSoftware", b =>
                {
                    b.Property<int>("IdSoftware")
                        .HasColumnType("int")
                        .HasColumnName("id_software");

                    b.Property<int>("IdWorkplace")
                        .HasColumnType("int")
                        .HasColumnName("id_workplace");

                    b.HasKey("IdSoftware", "IdWorkplace")
                        .HasName("PRIMARY");

                    b.HasIndex("IdWorkplace");

                    b.ToTable("installed_software", (string)null);
                });

            modelBuilder.Entity("TechInvent.DM.Models.InventStuff", b =>
                {
                    b.Property<int>("IdInventStuff")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_invent_stuff");

                    b.Property<string>("InventNumber")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("invent_number");

                    b.Property<bool>("IsDecommissioned")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_decommissioned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("IdInventStuff")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "InventNumber" }, "uq_inventstuff_inventnumber")
                        .IsUnique();

                    b.ToTable("invent_stuff", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("TechInvent.DM.Models.Manufacturer", b =>
                {
                    b.Property<int>("IdManufacturer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_manufacturer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("IdManufacturer")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Name" }, "name_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("name_UNIQUE1");

                    b.ToTable("manufacturer", (string)null);
                });

            modelBuilder.Entity("TechInvent.DM.Models.Os", b =>
                {
                    b.Property<int>("IdOs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_os");

                    b.Property<string>("OsName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("os_name");

                    b.Property<string>("OsVersion")
                        .HasMaxLength(125)
                        .HasColumnType("varchar(125)")
                        .HasColumnName("os_version");

                    b.HasKey("IdOs")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "OsName", "OsVersion" }, "UQ_name_version")
                        .IsUnique();

                    b.ToTable("os", (string)null);
                });

            modelBuilder.Entity("TechInvent.DM.Models.RequestType", b =>
                {
                    b.Property<int>("IdRequestType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_request_type");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("IdRequestType")
                        .HasName("PRIMARY");

                    b.ToTable("request_type", (string)null);

                    b.HasData(
                        new
                        {
                            IdRequestType = 1,
                            Name = "Проблема с ПК"
                        },
                        new
                        {
                            IdRequestType = 2,
                            Name = "Проблема с периферией"
                        },
                        new
                        {
                            IdRequestType = 3,
                            Name = "Проблема с ПО"
                        },
                        new
                        {
                            IdRequestType = 4,
                            Name = "Проблема в кабинете"
                        },
                        new
                        {
                            IdRequestType = 5,
                            Name = "Другое"
                        });
                });

            modelBuilder.Entity("TechInvent.DM.Models.Role", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_role");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("name");

                    b.HasKey("IdRole")
                        .HasName("PRIMARY");

                    b.ToTable("role", (string)null);

                    b.HasData(
                        new
                        {
                            IdRole = 1,
                            Name = "admin"
                        },
                        new
                        {
                            IdRole = 2,
                            Name = "user"
                        });
                });

            modelBuilder.Entity("TechInvent.DM.Models.Software", b =>
                {
                    b.Property<int>("IdSoftware")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_software");

                    b.Property<int>("IdManufacturer")
                        .HasColumnType("int")
                        .HasColumnName("id_manufacturer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("version");

                    b.HasKey("IdSoftware")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdManufacturer" }, "fk_software_manufacturer");

                    b.ToTable("software", (string)null);
                });

            modelBuilder.Entity("TechInvent.DM.Models.TechRequest", b =>
                {
                    b.Property<int>("IdRequest")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_request");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creation_date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("description");

                    b.Property<int>("IdRequestType")
                        .HasColumnType("int")
                        .HasColumnName("id_request_type");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_active");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.HasKey("IdRequest")
                        .HasName("PRIMARY");

                    b.HasIndex("IdRequestType");

                    b.HasIndex("IdUser");

                    b.ToTable("tech_request", (string)null);
                });

            modelBuilder.Entity("TechInvent.DM.Models.TechRequestComment", b =>
                {
                    b.Property<int>("IdComment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_comment");

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("comment_date");

                    b.Property<int>("IdRequest")
                        .HasColumnType("int")
                        .HasColumnName("id_request");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("message");

                    b.HasKey("IdComment")
                        .HasName("PRIMARY");

                    b.HasIndex("IdRequest");

                    b.HasIndex("IdUser");

                    b.ToTable("tech_request_comment", (string)null);
                });

            modelBuilder.Entity("TechInvent.DM.Models.TechRequestWorkplace", b =>
                {
                    b.Property<int>("IdTechRequest")
                        .HasColumnType("int")
                        .HasColumnName("id_request");

                    b.Property<int>("IdWorkplace")
                        .HasColumnType("int")
                        .HasColumnName("id_workplace");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_active");

                    b.HasKey("IdTechRequest", "IdWorkplace")
                        .HasName("PRIMARY");

                    b.HasIndex("IdWorkplace");

                    b.ToTable("techrequest_has_workplace", (string)null);
                });

            modelBuilder.Entity("TechInvent.DM.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<int>("IdRole")
                        .HasColumnType("int")
                        .HasColumnName("id_role");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.HasKey("IdUser")
                        .HasName("PRIMARY");

                    b.HasIndex("IdRole");

                    b.ToTable("user", (string)null);

                    b.HasData(
                        new
                        {
                            IdUser = 1,
                            IdRole = 1,
                            Login = "admin",
                            Password = "1"
                        });
                });

            modelBuilder.Entity("TechInvent.DM.Models.Disk", b =>
                {
                    b.HasBaseType("TechInvent.DM.Models.Component");

                    b.Property<int>("Size")
                        .HasColumnType("int")
                        .HasColumnName("size");

                    b.ToTable("disk", (string)null);
                });

            modelBuilder.Entity("TechInvent.DM.Models.Gpu", b =>
                {
                    b.HasBaseType("TechInvent.DM.Models.Component");

                    b.Property<string>("AdapterRam")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("adapter_ram");

                    b.Property<string>("Uuid")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("uuid");

                    b.ToTable("gpu", (string)null);
                });

            modelBuilder.Entity("TechInvent.DM.Models.Mainboard", b =>
                {
                    b.HasBaseType("TechInvent.DM.Models.Component");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("serial_number");

                    b.ToTable("mainboard", (string)null);
                });

            modelBuilder.Entity("TechInvent.DM.Models.NetAdapter", b =>
                {
                    b.HasBaseType("TechInvent.DM.Models.Component");

                    b.Property<int>("IdAdapterType")
                        .HasColumnType("int")
                        .HasColumnName("id_adapter_type");

                    b.Property<int>("IdManufacturer")
                        .HasColumnType("int")
                        .HasColumnName("id_manufacturer");

                    b.Property<string>("MacAddress")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("mac_address");

                    b.HasIndex(new[] { "IdAdapterType" }, "fk_net_adapter_adapter_type1_idx");

                    b.HasIndex(new[] { "IdManufacturer" }, "fk_net_adapter_manufacturer2_idx");

                    b.HasIndex(new[] { "IdComponent" }, "fk_ram_component1_idx");

                    b.ToTable("net_adapter", (string)null);
                });

            modelBuilder.Entity("TechInvent.DM.Models.Processor", b =>
                {
                    b.HasBaseType("TechInvent.DM.Models.Component");

                    b.Property<string>("LogicalCores")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("logical_cores");

                    b.Property<string>("MaxClockSpeed")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("max_clock_speed");

                    b.Property<string>("PhysicalCores")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("physical_cores");

                    b.ToTable("processor", (string)null);
                });

            modelBuilder.Entity("TechInvent.DM.Models.Ram", b =>
                {
                    b.HasBaseType("TechInvent.DM.Models.Component");

                    b.Property<string>("Capacity")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("capacity");

                    b.Property<int>("IdManufacturer")
                        .HasColumnType("int")
                        .HasColumnName("id_manufacturer");

                    b.Property<string>("MemoryType")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("memory_type");

                    b.Property<string>("PartNumber")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("part_number");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("serial_number");

                    b.Property<string>("Speed")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("speed");

                    b.HasIndex(new[] { "IdManufacturer" }, "fk_net_adapter_manufacturer1_idx");

                    b.ToTable("ram", (string)null);
                });

            modelBuilder.Entity("TechInvent.DM.Models.CabinetEquipment", b =>
                {
                    b.HasBaseType("TechInvent.DM.Models.InventStuff");

                    b.Property<int?>("IdCabinet")
                        .HasColumnType("int")
                        .HasColumnName("id_cabinet");

                    b.Property<int>("IdCabinetEquipmentType")
                        .HasColumnType("int")
                        .HasColumnName("id_cabinet_equipment_type");

                    b.Property<int?>("IdWorkplace")
                        .HasColumnType("int")
                        .HasColumnName("id_workplace");

                    b.HasIndex("IdCabinet");

                    b.HasIndex("IdCabinetEquipmentType");

                    b.HasIndex("IdWorkplace");

                    b.ToTable("cabinet_equipment", (string)null);
                });

            modelBuilder.Entity("TechInvent.DM.Models.Monitor", b =>
                {
                    b.HasBaseType("TechInvent.DM.Models.InventStuff");

                    b.Property<int?>("IdWorkplace")
                        .HasColumnType("int")
                        .HasColumnName("id_workplace");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("serial_number");

                    b.HasIndex("IdWorkplace");

                    b.ToTable("monitor", (string)null);
                });

            modelBuilder.Entity("TechInvent.DM.Models.Workplace", b =>
                {
                    b.HasBaseType("TechInvent.DM.Models.InventStuff");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<int>("IdCabinet")
                        .HasColumnType("int")
                        .HasColumnName("id_cabinet");

                    b.Property<int>("IdOs")
                        .HasColumnType("int")
                        .HasColumnName("id_os");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_update");

                    b.HasIndex(new[] { "IdCabinet" }, "fk_workplace_cabinet_idx");

                    b.HasIndex(new[] { "IdOs" }, "fk_workplace_os1_idx");

                    b.HasIndex(new[] { "Guid" }, "uq_workplace_guid")
                        .IsUnique();

                    b.ToTable("workplace", (string)null);
                });

            modelBuilder.Entity("TechInvent.DM.Models.Component", b =>
                {
                    b.HasOne("TechInvent.DM.Models.Workplace", "IdWorkplaceNavigation")
                        .WithMany("Components")
                        .HasForeignKey("IdWorkplace")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_hardware_component_workplace1");

                    b.Navigation("IdWorkplaceNavigation");
                });

            modelBuilder.Entity("TechInvent.DM.Models.InstalledSoftware", b =>
                {
                    b.HasOne("TechInvent.DM.Models.Software", "SoftwareNavigation")
                        .WithMany("InstalledSoftware")
                        .HasForeignKey("IdSoftware")
                        .IsRequired()
                        .HasConstraintName("fk_software_installed_software");

                    b.HasOne("TechInvent.DM.Models.Workplace", "WorkplaceNavigation")
                        .WithMany("InstalledSoftware")
                        .HasForeignKey("IdWorkplace")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_workplace_installed_software");

                    b.Navigation("SoftwareNavigation");

                    b.Navigation("WorkplaceNavigation");
                });

            modelBuilder.Entity("TechInvent.DM.Models.Software", b =>
                {
                    b.HasOne("TechInvent.DM.Models.Manufacturer", "ManufacturerNavigation")
                        .WithMany("Softwares")
                        .HasForeignKey("IdManufacturer")
                        .IsRequired()
                        .HasConstraintName("fk_software_manufacturer");

                    b.Navigation("ManufacturerNavigation");
                });

            modelBuilder.Entity("TechInvent.DM.Models.TechRequest", b =>
                {
                    b.HasOne("TechInvent.DM.Models.RequestType", "RequestType")
                        .WithMany("TechRequests")
                        .HasForeignKey("IdRequestType")
                        .IsRequired()
                        .HasConstraintName("techrequest_requesttype");

                    b.HasOne("TechInvent.DM.Models.User", "User")
                        .WithMany("TechRequests")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("techrequest_user");

                    b.Navigation("RequestType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechInvent.DM.Models.TechRequestComment", b =>
                {
                    b.HasOne("TechInvent.DM.Models.TechRequest", "TechRequest")
                        .WithMany("Comments")
                        .HasForeignKey("IdRequest")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_techrequest_comment");

                    b.HasOne("TechInvent.DM.Models.User", "Author")
                        .WithMany("Comments")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_comments");

                    b.Navigation("Author");

                    b.Navigation("TechRequest");
                });

            modelBuilder.Entity("TechInvent.DM.Models.TechRequestWorkplace", b =>
                {
                    b.HasOne("TechInvent.DM.Models.TechRequest", "TechRequest")
                        .WithMany("AttachedWorkplaces")
                        .HasForeignKey("IdTechRequest")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_techrequest_workplace");

                    b.HasOne("TechInvent.DM.Models.Workplace", "Workplace")
                        .WithMany("AttachedTechRequests")
                        .HasForeignKey("IdWorkplace")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_workplace_techrequest");

                    b.Navigation("TechRequest");

                    b.Navigation("Workplace");
                });

            modelBuilder.Entity("TechInvent.DM.Models.User", b =>
                {
                    b.HasOne("TechInvent.DM.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("fk_user_role");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TechInvent.DM.Models.Disk", b =>
                {
                    b.HasOne("TechInvent.DM.Models.Component", "IdComponentNavigation")
                        .WithOne("Disk")
                        .HasForeignKey("TechInvent.DM.Models.Disk", "IdComponent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_disk_component1");

                    b.Navigation("IdComponentNavigation");
                });

            modelBuilder.Entity("TechInvent.DM.Models.Gpu", b =>
                {
                    b.HasOne("TechInvent.DM.Models.Component", "IdComponentNavigation")
                        .WithOne("Gpu")
                        .HasForeignKey("TechInvent.DM.Models.Gpu", "IdComponent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_gpu_component1");

                    b.Navigation("IdComponentNavigation");
                });

            modelBuilder.Entity("TechInvent.DM.Models.Mainboard", b =>
                {
                    b.HasOne("TechInvent.DM.Models.Component", "IdComponentNavigation")
                        .WithOne("Mainboard")
                        .HasForeignKey("TechInvent.DM.Models.Mainboard", "IdComponent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_mainboard_component1");

                    b.Navigation("IdComponentNavigation");
                });

            modelBuilder.Entity("TechInvent.DM.Models.NetAdapter", b =>
                {
                    b.HasOne("TechInvent.DM.Models.AdapterType", "AdapterTypeNavigation")
                        .WithMany("NetAdapters")
                        .HasForeignKey("IdAdapterType")
                        .IsRequired()
                        .HasConstraintName("fk_net_adapter_adapter_type1");

                    b.HasOne("TechInvent.DM.Models.Component", "IdComponentNavigation")
                        .WithOne("NetAdapter")
                        .HasForeignKey("TechInvent.DM.Models.NetAdapter", "IdComponent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_ram_component1");

                    b.HasOne("TechInvent.DM.Models.Manufacturer", "IdManufacturerNavigation")
                        .WithMany("NetAdapters")
                        .HasForeignKey("IdManufacturer")
                        .IsRequired()
                        .HasConstraintName("fk_net_adapter_manufacturer2");

                    b.Navigation("AdapterTypeNavigation");

                    b.Navigation("IdComponentNavigation");

                    b.Navigation("IdManufacturerNavigation");
                });

            modelBuilder.Entity("TechInvent.DM.Models.Processor", b =>
                {
                    b.HasOne("TechInvent.DM.Models.Component", "IdComponentNavigation")
                        .WithOne("Processor")
                        .HasForeignKey("TechInvent.DM.Models.Processor", "IdComponent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_processor_component1");

                    b.Navigation("IdComponentNavigation");
                });

            modelBuilder.Entity("TechInvent.DM.Models.Ram", b =>
                {
                    b.HasOne("TechInvent.DM.Models.Component", "IdComponentNavigation")
                        .WithOne("Ram")
                        .HasForeignKey("TechInvent.DM.Models.Ram", "IdComponent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_net_adapter_component1");

                    b.HasOne("TechInvent.DM.Models.Manufacturer", "IdManufacturerNavigation")
                        .WithMany("Rams")
                        .HasForeignKey("IdManufacturer")
                        .IsRequired()
                        .HasConstraintName("fk_net_adapter_manufacturer1");

                    b.Navigation("IdComponentNavigation");

                    b.Navigation("IdManufacturerNavigation");
                });

            modelBuilder.Entity("TechInvent.DM.Models.CabinetEquipment", b =>
                {
                    b.HasOne("TechInvent.DM.Models.Cabinet", "Cabinet")
                        .WithMany("CabinetEquipments")
                        .HasForeignKey("IdCabinet")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_cabinet_equipment_cabinet");

                    b.HasOne("TechInvent.DM.Models.CabinetEquipmentType", "CabinetEquipmentType")
                        .WithMany("CabinetEquipments")
                        .HasForeignKey("IdCabinetEquipmentType")
                        .IsRequired()
                        .HasConstraintName("fk_cabinet_equipment_type");

                    b.HasOne("TechInvent.DM.Models.InventStuff", null)
                        .WithOne()
                        .HasForeignKey("TechInvent.DM.Models.CabinetEquipment", "IdInventStuff")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechInvent.DM.Models.Workplace", "Workplace")
                        .WithMany("CabinetEquipments")
                        .HasForeignKey("IdWorkplace")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_cabinet_equipment_workplace");

                    b.Navigation("Cabinet");

                    b.Navigation("CabinetEquipmentType");

                    b.Navigation("Workplace");
                });

            modelBuilder.Entity("TechInvent.DM.Models.Monitor", b =>
                {
                    b.HasOne("TechInvent.DM.Models.InventStuff", null)
                        .WithOne()
                        .HasForeignKey("TechInvent.DM.Models.Monitor", "IdInventStuff")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechInvent.DM.Models.Workplace", "Workplace")
                        .WithMany("Monitors")
                        .HasForeignKey("IdWorkplace")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_monitor_workplace");

                    b.Navigation("Workplace");
                });

            modelBuilder.Entity("TechInvent.DM.Models.Workplace", b =>
                {
                    b.HasOne("TechInvent.DM.Models.Cabinet", "IdCabinetNavigation")
                        .WithMany("Workplaces")
                        .HasForeignKey("IdCabinet")
                        .IsRequired()
                        .HasConstraintName("fk_workplace_cabinet");

                    b.HasOne("TechInvent.DM.Models.InventStuff", null)
                        .WithOne()
                        .HasForeignKey("TechInvent.DM.Models.Workplace", "IdInventStuff")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechInvent.DM.Models.Os", "IdOsNavigation")
                        .WithMany("Workplaces")
                        .HasForeignKey("IdOs")
                        .IsRequired()
                        .HasConstraintName("fk_workplace_os1");

                    b.Navigation("IdCabinetNavigation");

                    b.Navigation("IdOsNavigation");
                });

            modelBuilder.Entity("TechInvent.DM.Models.AdapterType", b =>
                {
                    b.Navigation("NetAdapters");
                });

            modelBuilder.Entity("TechInvent.DM.Models.Cabinet", b =>
                {
                    b.Navigation("CabinetEquipments");

                    b.Navigation("Workplaces");
                });

            modelBuilder.Entity("TechInvent.DM.Models.CabinetEquipmentType", b =>
                {
                    b.Navigation("CabinetEquipments");
                });

            modelBuilder.Entity("TechInvent.DM.Models.Component", b =>
                {
                    b.Navigation("Disk");

                    b.Navigation("Gpu");

                    b.Navigation("Mainboard");

                    b.Navigation("NetAdapter");

                    b.Navigation("Processor");

                    b.Navigation("Ram");
                });

            modelBuilder.Entity("TechInvent.DM.Models.Manufacturer", b =>
                {
                    b.Navigation("NetAdapters");

                    b.Navigation("Rams");

                    b.Navigation("Softwares");
                });

            modelBuilder.Entity("TechInvent.DM.Models.Os", b =>
                {
                    b.Navigation("Workplaces");
                });

            modelBuilder.Entity("TechInvent.DM.Models.RequestType", b =>
                {
                    b.Navigation("TechRequests");
                });

            modelBuilder.Entity("TechInvent.DM.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("TechInvent.DM.Models.Software", b =>
                {
                    b.Navigation("InstalledSoftware");
                });

            modelBuilder.Entity("TechInvent.DM.Models.TechRequest", b =>
                {
                    b.Navigation("AttachedWorkplaces");

                    b.Navigation("Comments");
                });

            modelBuilder.Entity("TechInvent.DM.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("TechRequests");
                });

            modelBuilder.Entity("TechInvent.DM.Models.Workplace", b =>
                {
                    b.Navigation("AttachedTechRequests");

                    b.Navigation("CabinetEquipments");

                    b.Navigation("Components");

                    b.Navigation("InstalledSoftware");

                    b.Navigation("Monitors");
                });
#pragma warning restore 612, 618
        }
    }
}
